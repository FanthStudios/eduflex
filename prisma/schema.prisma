// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id    Int     @id @default(autoincrement())
  userId Int    @unique
  type  String
  provider String
  providerAccountId String
  refreshToken String?
  accessToken String?
  expiresAt Int?
  tokenType String?
  scope String?
  idToken String?
  sessionState String?
  isSubscribed Boolean @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  role      String
  accounts Account[]
  sessions Session[]
  student   Student?
  teacher   Teacher?
}

model Student {
  userId     Int      @id
  user       User     @relation(fields: [userId], references: [id])
  appointments Appointment[]
  favoriteTeachers Teacher[]
}

model Teacher {
  userId     Int      @id
  user       User     @relation(fields: [userId], references: [id])
  subjects   Subject[] @relation("TeacherSubjects")
  appointments Appointment[]
  students   Student[]
}

model Subject {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  teachers  Teacher[] @relation("TeacherSubjects")
  appointments Appointment[]
}

model Appointment {
  id         Int      @id @default(autoincrement())
  date       DateTime
  subjectId  Int
  subject    Subject  @relation(fields: [subjectId], references: [id])
  topic      String
  description String?
  goal       Goal
  teacherId  Int
  teacher    Teacher  @relation(fields: [teacherId], references: [userId])
  students   Student[]
}

enum Role {
  STUDENT
  TEACHER
}

enum Goal {
  CORRECT_TEST
  COREPETITIONS
}

model VerificationToken {
  identifier String
  token String @unique
  expires DateTime

  @@id([identifier, token])
}